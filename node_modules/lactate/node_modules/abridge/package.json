{
  "name": "abridge",
  "version": "0.5.3",
  "description": "Streaming minifier for JS and CSS",
  "author": {
    "name": "Weltschmerz"
  },
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/Weltschmerz/Abridge.git"
  },
  "dependencies": {
    "suckle": "0.5.4",
    "fraction": "0.2.0",
    "ycssmin": "1.0.1"
  },
  "readme": "# Abridge\n\n`npm install abridge`\n\nAbridge is a streaming compiler for CSS & JavaScript. It is a superset of [ycssmin](https://github.com/yui/ycssmin) and [uglify-js](https://github.com/mishoo/UglifyJS), with a streamable interface on top.\n\n## Usage\n\n```js\nvar abridge = require('abridge');\n/* abridge.{Minifier, createStream, minify} */\n```\n\n**Piping output**\n\nPipe #minify output to any writable stream.\n\n```js\nabridge.minify('path/to/my/file.js').pipe(process.stdout);\n```\n\nYou may use either a String or an instance of fs.ReadStream as a first argument.\n\n```js\nvar inputStream = require('fs').createReadStream('path/to/my/file.css');\nabridge.minify(inputStream).pipe(process.stdout);\n```\n\n**Using callback**\n\nThrow in a callback if you desire.\n\n```js\nabridge.minify('file.js', function(err, data) {\n});\n```\n\n**minify is createStream**\n\n```js\nabridge.createStream('file.css').pipe(process.stdout);\n```\n\n**Minify multiple files at once**\n\n```js\nabridge.minify(['file1.js', 'file2.js']).pipe(process.stdout);\n```\n\n**Serve minified scripts and styles**\n\nAbridge can be integrated into a web server for quickly minifying scripts & styles.\n\n```js\nvar http = require('http');\nvar server = http.createServer(function(req, res) {\n    abridge.createStream(req.url.slice(1)).pipe(res);\n});\nserver.listen(8080);\n```\n\nFor a complete file server solution that uses Abridge minification as well as automatic gzipping, see [Lactate](https://github.com/Weltschmerz/Lactate)\n\n##License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "abridge@0.5.3",
  "_from": "abridge@latest"
}
